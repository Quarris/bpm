# Concatenate.node
description: "Concatenates two strings"
group: String
name: To String
extends: Base/Node

theme:
  color: '#3366cc'
  icon: 0xf658
  height: 40
  width: 100
edges:
  value:
    description: 'The value'
    direction: input
    type: any
  result:
    description: 'The string'
    direction: output
    type: string

source: |
  local function ${NODE.name}_${NODE.uid}(value)
    local function dump(o, indent)
      indent = indent or ""
      if type(o) == 'table' then
        local s = "{\n"
        local inner_indent = indent .. "  "
        local is_array = #o > 0  -- Check if the table is array-like
        local i = 1
        for k, v in pairs(o) do
          s = s .. inner_indent
          if is_array and type(k) == 'number' and k == i then
            -- For array-like tables, just output the value
            s = s .. dump(v, inner_indent)
            i = i + 1
          else
            -- For associative tables or mixed tables, output the key
            if type(k) ~= 'number' then
              k = '"'..k..'"'
            end
            s = s .. k .. " = " .. dump(v, inner_indent)
          end
          s = s .. ",\n"
        end
        return s .. indent .. "}"
      else
        return tostring(o)
      end
    end
    if type(value) == 'table' then
      return dump(value)
    else
      return tostring(value)
    end
  end